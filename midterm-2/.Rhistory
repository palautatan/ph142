summed
new
avgs   <- sapply(1:length(new), function(k) mean(new[k], summed[k])
)
avgs
# * PART B.
summed <- sense+emma+austen
avgs   <- sapply(1:length(new), function(k) mean(new[k], summed[k]))
avgs
new+summed
avgs   <- new+summed/2
avgs
summed
# * PART B.
summed <- sense+emma+austen/sum(sense+emma+austen)
summed
# * PART B.
summed <- sense+emma+austen
summed
sum(sense+emma+austen)
# * PART B.
summed <- (sense+emma+austen) / sum(sense+emma+austen)
summed
new_scale    <- new / sum(new)
# * PART B.
summed_scale <- (sense+emma+austen) / sum(sense+emma+austen)
new_scale    <- new / sum(new)
summed_scale
new_scale
# * PART A.
sense / sum(sense)
emma_scale  <- emma / sum(emma)
austen_scale <- austen / sum(austen)
averaged_a   <- (sense_scale + emma_scale + austen_scale) / 3
# * PART A.
sense_scale  <- sense / sum(sense)
emma_scale   <- emma / sum(emma)
austen_scale <- austen / sum(austen)
averaged_a   <- (sense_scale + emma_scale + austen_scale) / 3
averaged_a
eiei         <- sense_scale - averaged_a
sense_scale - averaged_a
(sense_scale - averaged_a)^2 / averaged_a
rbind(sense_scale, emma_scale, austen_scale)
scaled_mat_a <- rbind(sense_scale, emma_scale, austen_scale)
scaled_mat_a
apply(scaled_mat_a, 1, function(k) (k-averaged_a)^2/averaged_a)
averaged_a
apply(scaled_mat_a, 1, function(k) (k-averaged_a)^2/averaged_a)
eiei <- apply(scaled_mat_a, 1, function(k) (k-averaged_a)^2/averaged_a)
pchisq(q=sum(eiei), df=(3-1)*(6-1), lower.tail=FALSE)
sense_scale
averaged_a
scaled_mat_a
# * PART B.
summed_scale <- (sense+emma+austen) / sum(sense+emma+austen)
new_scale    <- new / sum(new)
avgs         <- new+summed/2
avgs
summed_scale
scaled_mat_b <- rbind(summed_scale, new_scale)
scaled_mat_b
eiei <- apply(scaled_mat_b, 1, function(k) (k-averaged_b)^2/averaged_b)
# * PART B.
summed_scale <- (sense+emma+austen) / sum(sense+emma+austen)
new_scale    <- new / sum(new)
scaled_mat_b <- rbind(summed_scale, new_scale)
averaged_b   <- new+summed/2
eiei <- apply(scaled_mat_b, 1, function(k) (k-averaged_b)^2/averaged_b)
eiei
scaled_mat_b
averaged_b
summed_scale <- (sense+emma+austen) / sum(sense+emma+austen)
new_scale    <- new / sum(new)
scaled_mat_b <- rbind(summed_scale, new_scale)
averaged_b   <- new_scale+summed_scale/2
eiei <- apply(scaled_mat_b, 1, function(k) (k-averaged_b)^2/averaged_b)
eiei
pchisq(q=sum(eiei), df=(3-1)*(6-1), lower.tail=FALSE)
scaled_mat_b
pchisq(q=sum(eiei), df=(3-1)*(6-1), lower.tail=FALSE)
scaled_mat_b
pchisq(q=sum(eiei), df=(2-1)*(6-1), lower.tail=FALSE)
averaged_a   <- (sense_scale + emma_scale + austen_scale) / 3
averaged_a
sum(sense)
averaged_a * sum(sense)
sense_test   <- averaged_a * sum(sense)
emma_test    <- averaged_a * sum(emma)
austen_test  <- averaged_a * sum(austen)
austen_test
test_mat_a   <- rbind(sense_test, emma_test, austen_test)
test_mat_a
averaged_a
sense_test
test_mat_a
test_mat_a - scaled_mat_a
(test_mat_a - scaled_mat_a)
# * PART A.
mat_a        <- rbind(sense, emma, austen)
(mat_a - scaled_mat_a)
(mat_a - scaled_mat_a)
mat_a
scaled_mat_a
(mat_a - test_mat_a)
(mat_a - test_mat_a)^2 / test_mat_a
eiei = (mat_a - test_mat_a)^2 / test_mat_a
eiei <- (mat_a - test_mat_a)^2 / test_mat_a
pchisq(q=sum(eiei), df=(3-1)*(6-1), lower.tail=FALSE)
# * PART B.
mat_b        <- rbind(sense+emma+austen, new)
mat_b
summed_scale <- (sense+emma+austen) / sum(sense+emma+austen)
new_scale    <- new / sum(new)
scaled_mat_b <- rbind(summed_scale, new_scale)
scaled_mat_b
averaged_b   <- new_scale+summed_scale/2
averaged_b
new_scale    <- new / sum(new)
scaled_mat_b <- rbind(summed_scale, new_scale)
averaged_b   <- new_scale+summed_scale/2
averaged_b
scaled_mat_b
new_scale
summed_scale
scaled_mat_b
averaged_b
new_scale
scaled_mat_b
new_scale
summed_scale
summed_scale <- (sense+emma+austen) / sum(sense+emma+austen)
new_scale    <- new / sum(new)
scaled_mat_b <- rbind(summed_scale, new_scale)
averaged_b   <- new_scale+summed_scale/2
averaged_b
new_scale+summed_scale
averaged_b   <- (new_scale+summed_scale)/2
averaged_b
averaged_b
summed_test  <- averaged_b * sum(sense+emma+austen)
summed_test
new_test     <- averaged_b * sum(new)
new_test
summed_test
test_mat_b   <- rbind(summed_test, new_test)
test_mat_b
mat_b
eiei <- (mat_b - test_mat_b)^2/test_mat_b
eiei
pchisq(q=sum(eiei), df=(2-1)*(6-1), lower.tail=FALSE)
knitr::include_graphics("samp_dist_p.png")
knitr::include_graphics("images/binomial_normal.png")
# load library and data
library(psychometric)
load("kolmogorov.RData")
# calculate plug in estimates (empirical means)
mu_1 <- mean(U*V)
mu_2 <- mean(U)
mu_3 <- mean(V)
mu_4 <- mean(U^2)
mu_5 <- mean(V^2)
mu <- c(mu_1, mu_2, mu_3, mu_4, mu_5)
# calculate ICs for each observation for each parameter
ic_1 <- U*V - mu_1
ic_2 <- U - mu_2
ic_3 <- V - mu_3
ic_4 <- U^2 - mu_4
ic_5 <- V^2 - mu_5
# calculate partial derivates for each parameter
# mu_1
gradient_mu1 <- 1/(sqrt(mu_4 - mu_2^2) * sqrt(mu_5 - mu_3^2))
# mu_2
gradient_mu2 <- (mu_1*mu_2 - mu_3*mu_4)/((mu_4 - mu_2^2)^(3/2)*sqrt(mu_5 - mu_3^2))
# mu_3
gradient_mu3 <- (mu_1*mu_3 - mu_2*mu_5)/(sqrt(mu_4 - mu_2^2)*(mu_5 - mu_3^2)^(3/2))
# mu_4
gradient_mu4 <- (mu_1 - mu_2*mu_3)/(2*(mu_4 - mu_2^2)^(3/2)*sqrt(mu_5 - mu_3^2))
# mu_5
gradient_mu5 <- (mu_1 - mu_2*mu_3)/(2*sqrt(mu_4 - mu_2^2)*(mu_5 - mu_3^2)^(3/2))
# combine into vectors
IC <- cbind(ic_1, ic_2, ic_3, ic_4, ic_5)
gradients <- c(gradient_mu1, gradient_mu2, gradient_mu3, gradient_mu4, gradient_mu5)
# define values
n <- length(U)
z <- qnorm(0.95)
var_IC <- var(IC)
SE <- sqrt(diag(var_IC)/n)
SE_rho <- gradients %*% SE
# find CI
rho_hat <- cor(U,V)
lb <- rho_hat - z*SE_rho
ub <- rho_hat + z*SE_rho
# print 90% CI
rho_hat
c(lb, ub)
package_CI <- CIr(rho_hat, n, level = 0.90)
# print results
rho_hat
package_CI
gradients
SE_rho
# define values
n <- length(U)
z <- qnorm(0.95)
var_IC
SE
SE_rho
c(lb, ub)
gradients
var_IC
SE
knitr::opts_chunk$set(echo = TRUE)
set.seed(252)
u_w1 <- runif(n=1, min=0, max=1)
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
n <- 100000
# * EXOGENOUS VARIABLES
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
# * ENDONGENOUS VARIABLES
w1   <- as.numeric(u_w1<0.5)
w2   <- as.numeric(u_w2<0.5)
a    <- as.numeric(u_a<plogis(-0.5+w1-1.5*w2))
y    <- as.numeric(u_y<plogis(-0.75+w1-2*w2+2.5*a+a*w1))
n <- 100000
# * EXOGENOUS VARIABLES
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
# * ENDONGENOUS VARIABLES
w1   <- as.numeric(u_w1<0.5)
w2   <- as.numeric(u_w2<0.5)
a    <- as.numeric(u_a<plogis(-0.5+w1-1.5*w2))
y    <- as.numeric(u_y<plogis(-0.75+w1-2*w2+2.5*a+a*w1))
this_obs <- data.frame(w1, w2, a, y)
this_obs
observations <- list()
n <- 100000
observations <- list()
for (i in 1:n) {
# * EXOGENOUS VARIABLES
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
# * ENDONGENOUS VARIABLES
w1   <- as.numeric(u_w1<0.5)
w2   <- as.numeric(u_w2<0.5)
a    <- as.numeric(u_a<plogis(-0.5+w1-1.5*w2))
y    <- as.numeric(u_y<plogis(-0.75+w1-2*w2+2.5*a+a*w1))
# * SAVE
this_obs <- data.frame(w1, w2, a, y)
observations[[i]] <- this_obs
}
data.frame(observations)
as.data.frame(observations)
observations
n <- 100000
observations <- list()
for (i in 1:n) {
# * EXOGENOUS VARIABLES
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
# * ENDONGENOUS VARIABLES
w1   <- as.numeric(u_w1<0.5)
w2   <- as.numeric(u_w2<0.5)
a    <- as.numeric(u_a<plogis(-0.5+w1-1.5*w2))
y    <- as.numeric(u_y<plogis(-0.75+w1-2*w2+2.5*a+a*w1))
# * SAVE
this_obs <- data.frame(w1, w2, a, y)
observations[[i]] <- this_obs
}
as.data.frame(observations)
knitr::opts_chunk$set(echo = TRUE)
n <- 10
observations <- list()
for (i in 1:n) {
# * EXOGENOUS VARIABLES
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
# * ENDONGENOUS VARIABLES
w1   <- as.numeric(u_w1<0.5)
w2   <- as.numeric(u_w2<0.5)
a    <- as.numeric(u_a<plogis(-0.5+w1-1.5*w2))
y    <- as.numeric(u_y<plogis(-0.75+w1-2*w2+2.5*a+a*w1))
# * SAVE
this_obs <- data.frame(w1, w2, a, y)
observations[[i]] <- this_obs
}
observations[[1]]
observations
unlist(observations)
data.frame(unlist(observations))
n <- 10
observations <- c()
for (i in 1:n) {
# * EXOGENOUS VARIABLES
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
# * ENDONGENOUS VARIABLES
w1   <- as.numeric(u_w1<0.5)
w2   <- as.numeric(u_w2<0.5)
a    <- as.numeric(u_a<plogis(-0.5+w1-1.5*w2))
y    <- as.numeric(u_y<plogis(-0.75+w1-2*w2+2.5*a+a*w1))
# * SAVE
this_obs <- c(w1, w2, a, y)
observations <- rbind(observations, this_obs)
}
observations
n <- 100000
observations <- c()
for (i in 1:n) {
# * EXOGENOUS VARIABLES
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
# * ENDONGENOUS VARIABLES
w1   <- as.numeric(u_w1<0.5)
w2   <- as.numeric(u_w2<0.5)
a    <- as.numeric(u_a<plogis(-0.5+w1-1.5*w2))
y    <- as.numeric(u_y<plogis(-0.75+w1-2*w2+2.5*a+a*w1))
# * SAVE
this_obs <- c(w1, w2, a, y)
observations <- rbind(observations, this_obs)
}
observations <- data.frame(observations)
names(observations) <- c("w1", "w2", "a", "y")
head(observations)
row.names(observations) <- 1:nrow(observations)
head(observations)
View(observations)
counterfactual_a_1 <- rep(1, nrow(observations))
counterfactual_a_0 <- rep(0, nrow(observations))
counterfactual_y_1 <- as.numeric(u_y<plogis(-0.75+observations$w1-2*observations$w2+2.5*(1)+(1)*observations$w1))
y1 <- as.numeric(u_y<plogis(-0.75+observations$w1-2*observations$w2+2.5*(1)+(1)*observations$w1))
y1
y1 <- as.numeric(observations$u_y<plogis(-0.75+observations$w1-2*observations$w2+2.5*(1)+(1)*observations$w1))
y1
n <- 100000
observations <- c()
for (i in 1:n) {
# * EXOGENOUS VARIABLES
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
# * ENDONGENOUS VARIABLES
w1   <- as.numeric(u_w1<0.5)
w2   <- as.numeric(u_w2<0.5)
a    <- as.numeric(u_a<plogis(-0.5+w1-1.5*w2))
y    <- as.numeric(u_y<plogis(-0.75+w1-2*w2+2.5*a+a*w1))
# * SAVE
this_obs <- c(u_w1, u_w2, u_a, u_y, w1, w2, a, y)
observations <- rbind(observations, this_obs)
}
observations <- data.frame(observations)
names(observations) <- c("w1", "w2", "a")
row.names(observations) <- 1:nrow(observations)
head(observations)
knitr::opts_chunk$set(echo = TRUE)
n <- 100000
observations <- c()
for (i in 1:n) {
# * EXOGENOUS VARIABLES
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
# * ENDONGENOUS VARIABLES
w1   <- as.numeric(u_w1<0.5)
w2   <- as.numeric(u_w2<0.5)
a    <- as.numeric(u_a<plogis(-0.5+w1-1.5*w2))
y    <- as.numeric(u_y<plogis(-0.75+w1-2*w2+2.5*a+a*w1))
# * SAVE
this_obs <- c(u_w1, u_w2, u_a, u_y, w1, w2, a, y)
observations <- rbind(observations, this_obs)
}
observations <- data.frame(observations)
names(observations) <- c("w1", "w2", "a")
row.names(observations) <- 1:nrow(observations)
write.csv(x=observations, file="observations.csv")
y0 <- as.numeric(observations$u_y<plogis(-0.75+observations$w1-2*observations$w2+2.5*(0)+(0)*observations$w1))
y1 <- as.numeric(observations$u_y<plogis(-0.75+observations$w1-2*observations$w2+2.5*(1)+(1)*observations$w1))
y0
observations
View(observations)
n <- 100000
observations <- c()
for (i in 1:n) {
# * EXOGENOUS VARIABLES
u_w1 <- runif(n=1, min=0, max=1)
u_w2 <- runif(n=1, min=0, max=1)
u_a  <- runif(n=1, min=0, max=1)
u_y  <- runif(n=1, min=0, max=1)
# * ENDONGENOUS VARIABLES
w1   <- as.numeric(u_w1<0.5)
w2   <- as.numeric(u_w2<0.5)
a    <- as.numeric(u_a<plogis(-0.5+w1-1.5*w2))
y    <- as.numeric(u_y<plogis(-0.75+w1-2*w2+2.5*a+a*w1))
# * SAVE
this_obs <- c(u_w1, u_w2, u_a, u_y, w1, w2, a, y)
observations <- rbind(observations, this_obs)
}
observations <- data.frame(observations)
names(observations) <- c("u_w1", "u_w2", "u_a", "u_y", "w1", "w2", "a", "y")
row.names(observations) <- 1:nrow(observations)
write.csv(x=observations, file="observations.csv")
y0 <- as.numeric(observations$u_y<plogis(-0.75+observations$w1-2*observations$w2+2.5*(0)+(0)*observations$w1))
y1 <- as.numeric(observations$u_y<plogis(-0.75+observations$w1-2*observations$w2+2.5*(1)+(1)*observations$w1))
y0
observations_2 <- cbind(observations, y0, y1)
y0 <- as.numeric(observations$u_y<plogis(-0.75+observations$w1-2*observations$w2+2.5*(0)+(0)*observations$w1))
y1 <- as.numeric(observations$u_y<plogis(-0.75+observations$w1-2*observations$w2+2.5*(1)+(1)*observations$w1))
observations_2 <- cbind(observations, y0, y1)
write.csv(x=observations_2, file="observations_2.csv")
View(observations_2)
setwd("~/GitHub/ph142-personal/midterm-2")
rnorm(n=10000, mean=0, sd=1)
sample <- rnorm(n=10000, mean=0, sd=1)
hist(sample)
sample[which(sample==0)]
sample[which(sample)==0]
which(sample==0)
round(sample, 1)
estimates <- round(sample, 1)
which(estimates==0.1)
which(estimates==0.1) / length(estimates)
sum(which(estimates==0.1)) / length(estimates)
sum(estimates==0.1) / length(estimates)
sample
estimates
rappers <- read.csv("../../notes/rappers/data/rappers.csv")
head(rappers)
library(dplyr)
ggplot(rappers, aes(x=net_worth)) + geom_histogram()
library(ggplot2)
ggplot(rappers, aes(x=net_worth)) + geom_histogram()
ggplot(rappers, aes(x=net_worth)) + geom_histogram(binwidth=10)
ggplot(rappers, aes(x=net_worth)) + geom_histogram(binwidth=30)
ggplot(rappers, aes(x=net_worth)) + geom_histogram(binwidth=30, col="white")
ggplot(rappers, aes(x=net_worth)) + geom_histogram(binwidth=30, col="white", lwd=0.2)
library(ggplot2)
ggplot(rappers, aes(x=net_worth)) + geom_histogram(binwidth=30, col="white", lwd=0.2) + ggtitle("True net worth histogram")
rappers %>% sample_n(10)
library(dplyr)
our_first_sample <- rappers %>% sample_n(10)
our_first_sample
our_first_sample
ggplot(our_first_sample, aes(x=net_worth)) + geom_histogram(binwidth=30, col="white", lwd=0.2) + ggtitle("Distribution of my sample")
sampling_distribution <- c()
sampling_distribution <- c()
for (i in 1:50) {
this_sample <- rappers %>% sample_n(10)
sample_mean <- this_sample %>% summarize(mean_net=mean(net_worth))
sampling_distribution <- c(sampling_distribution, sample_mean)
}
sampling_distribution
as.numeric(sampling_distribution)
data.frame(as.numeric(sampling_distribution))
sampling_distribution <- c()
for (i in 1:50) {
this_sample <- rappers %>% sample_n(10)
sample_mean <- this_sample %>% summarize(mean_net=mean(net_worth))
sampling_distribution <- c(sampling_distribution, sample_mean)
}
sample_mean_df <- data.frame(sample_means=as.numeric(sampling_distribution))
ggplot(sample_mean_df, aes(x=sample_means)) + geom_histogram(binwidth=30, col="white", lwd=0.2) + ggtitle("Sampling distribution"))
sampling_distribution <- c()
for (i in 1:50) {
this_sample <- rappers %>% sample_n(10)
sample_mean <- this_sample %>% summarize(mean_net=mean(net_worth))
sampling_distribution <- c(sampling_distribution, sample_mean)
}
sample_mean_df <- data.frame(sample_means=as.numeric(sampling_distribution))
ggplot(sample_mean_df, aes(x=sample_means)) + geom_histogram(binwidth=30, col="white", lwd=0.2) + ggtitle("Sampling distribution")
sampling_distribution <- c()
for (i in 1:50) {
this_sample <- rappers %>% sample_n(10)
sample_mean <- this_sample %>% summarize(mean_net=mean(net_worth))
sampling_distribution <- c(sampling_distribution, sample_mean)
}
sample_mean_df <- data.frame(sample_means=as.numeric(sampling_distribution))
ggplot(sample_mean_df, aes(x=sample_means)) + geom_histogram(binwidth=20, col="white", lwd=0.2) + ggtitle("Sampling distribution")
sampling_distribution <- c()
for (i in 1:50) {
this_sample <- rappers %>% sample_n(10)
sample_mean <- this_sample %>% summarize(mean_net=mean(net_worth))
sampling_distribution <- c(sampling_distribution, sample_mean)
}
sample_mean_df <- data.frame(sample_means=as.numeric(sampling_distribution))
ggplot(sample_mean_df, aes(x=sample_means)) + geom_histogram(binwidth=15, col="white", lwd=0.2) + ggtitle("Sampling distribution")
ggplot(our_first_sample, aes(x=net_worth)) + geom_histogram(binwidth=30, col="white", lwd=0.2) + ggtitle("Distribution of my sample")
ggplot(sample_mean_df, aes(x=sample_means)) + geom_histogram(binwidth=10, col="white", lwd=0.2) + ggtitle("Sampling distribution")
qnorm(1-(alpha/2), mean=0, sd=1)
alpha <- 0.05
qnorm(1-(alpha/2), mean=0, sd=1)
alpha <- 0.05
qnorm((1-alpha)/2), mean=0, sd=1)
